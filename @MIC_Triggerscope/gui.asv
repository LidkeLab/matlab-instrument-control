function gui(obj, GUIParent)
%gui is the GUI method for the MIC_Triggerscope class.
% This GUI has several elements which can be used to control a Triggerscope
% (see MIC_Triggerscope.m for details).
%
% INPUTS:
%   GUIParent: The 'Parent' of this GUI, e.g., a figure handle.
%              (Default = figure(...))

% Created by:
%   David J. Schodt (Lidke lab, 2020)


% Create a figure handle for the GUI if needed.
if ~(exist('GUIParent', 'var') && ~isempty(GUIParent) ...
        && isgraphics(GUIParent))
    DefaultFigurePosition = get(0, 'defaultFigurePosition');
    GUIParent = figure('MenuBar', 'none', ...
        'Name', 'Triggerscope Control GUI', 'NumberTitle', 'off', ...
        'Units', 'pixels', ...
        'Position', DefaultFigurePosition);
end

% Generate some panels to help organize the GUI.
ConnectionPanel = uipanel(GUIParent, ...
    'Title', 'Connection', ...
    'Units', 'normalized', 'Position', [0, 0.1, 0.3, 0.9]);
ControlPanel = uipanel(GUIParent, ...
    'Title', 'Controls', ...
    'Units', 'normalized', 'Position', [0.3, 0.1, 0.7, 0.9]);
StatusPanel = uipanel(GUIParent, ...
    'Title', 'Status', ...
    'Units', 'normalized', 'Position', [0, 0, 1, 0.1]);

% Add controls to the ConnectionPanel.
UIControlInitPos = [0, 0.8, 0, 0];
ButtonSize = [0, 0, 1, 0.1];
TextSize = [0, 0, 0.5, 0.1];
DefaultSize = [0, 0, 0.5, 0.1];
uicontrol(ConnectionPanel, 'Style', 'text', 'String', 'Serial port: ', ...
    'Units', 'normalized', 'Position', UIControlInitPos + TextSize, ...
    'HorizontalAlignment', 'right');
SerialPortEdit = uicontrol(ConnectionPanel, ...
    'Style', 'edit', 'String', obj.SerialPort, ...
    'Units', 'normalized', ...
    'Position', UIControlInitPos + DefaultSize + [TextSize(3), 0, 0, 0]);
ConnectTSButton = uicontrol(ConnectionPanel, ...
    'Style', 'pushbutton', 'String', 'Connect Triggerscope', ...
    'Units', 'normalized', ...
    'Position', UIControlInitPos + ButtonSize ...
    + [0, -SerialPortEdit.Position(4), 0, 0], ...
    'Enable', convertLogicalToStatus(~obj.IsConnected));
DisconnectTSButton = ConnectTSButton = uicontrol(ConnectionPanel, ...
    'Style', 'pushbutton', 'String', 'Connect Triggerscope', ...
    'Units', 'normalized', ...
    'Position', UIControlInitPos + ButtonSize ...
    + [0, -SerialPortEdit.Position(4), 0, 0], ...
    'Enable', convertLogicalToStatus(~obj.IsConnected));



    function [StatusString] = convertLogicalToStatus(Logical)
        % This function converts logical(0) to 'off' and logical(1) to
        % 'on'.
        StatusString = erase([char(Logical*'on'), char(~Logical*'off')],...
            char(0));
    end











end